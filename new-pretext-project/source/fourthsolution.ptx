<?xml version="1.0" encoding="utf-8"?>
<section xml:id="fourthsolution" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Fourth Solution</title>
  <p>
  This solution is by induction on the power <m>k</m> with the multiplication 
  algorithm.  This solution will prove that if the base-<m>2n</m> digits of
  <m>n^{k-1}</m> are all at least <m>2(d+1)</m> then the base-<m>2n</m> digits of 
  <m>n^k</m> are all at least <m>d+1</m>.
</p>

<example>
<title> Example multiplication by <m>5</m> in base <m>10</m></title>
<p>
To follow the conclusions and reasoning of the next Lemma, it helps to carefully
examine a multiplication by <m>5</m> in base <m>10</m>.  
This example uses the same notation as the Lemma.
Consider the multiplication algorithm applied to multiplying <m>5^3 = 625</m> by
<m>5</m>. There is no initial carry so set <m>r_0 = 0</m>. 
First <m>5</m> multiplies <m>5</m> giving <m>25</m> so the unit digit in the product will
be <m>\operatorname{rem}(5 \cdot 5 + 0, 10) = 5</m> and the first carry will be 
<m>r_1 = \lfloor \frac{5 \cdot 5 + 0}{10} \rfloor = 2</m>.  The next step in the multiplication
is <m>5</m> times <m>2</m> equals <m>10</m> plus the carry of <m>2</m> making <m>12</m>.
Then the next digit will be <m>\operatorname{rem}(12, 10) = 2</m> and the next carry will be
<m>r_2 =  \lfloor \frac{5 \cdot 2 + 2}{10} \rfloor = 1</m>.  The next-to-final step in the multiplication
is <m>5</m> times <m>6</m> equals <m>30</m> plus the carry of <m>1</m> making <m>31</m>.
Then the third-from-right digit will be <m>\operatorname{rem}(31, 10) = 1</m> and the final carry will be
<m>r_3 =  \lfloor \frac{5 \cdot 6 + 1}{10} \rfloor = 3</m>.
The final step is <m>5</m> times the phantom fourth digit of  <m>0</m> equals <m>0</m> plus the 
carry of <m>3</m> making <m>3</m>.
Then the fourth-from-right digit will be <m>\operatorname{rem}(3, 10) = 3</m> and the final 
carry will be
<m>r_4 =  \lfloor \frac{5*0 + 3}{10} \rfloor = 0</m>.  The multiplication is complete with
product <m>3125</m>.
</p>
</example>
<example>
<title>Multiplication of base <m>14</m> digits by <m>7</m></title>
<p>
It is additionally helpful for understanding the Lemma and the proof
to look at another example of multiplication of digits in base <m>2n</m> 
by <m>n</m> for a small value of <m>n</m>, say <m>n=7</m>.  Here the 
digits will be the values <m>0</m> to <m>13</m>.  For an even value digit
<m>2k</m> times <m>7</m>, the result will be <m>14 k</m>, where the value of <m>k</m>
is <m>6</m> or less.  Then the new digit in the product will be <m>c_i = 0</m>
and the carry will be <m>k</m> where <m>0 \le k \le n</m>.  
An odd value digit <m>2k + 1</m> times <m>7</m> will result in <m> 14 k + 7</m>
so the new digit in the product will be <m>7</m> and the carry will be again be <m>k</m>
with <m>0 \le k \lt n</m>.
</p>
</example>
<remark>
<title>A caution about notation</title>
<p>
The standard notation used elsewhere for this article conflicts with the English names for the
operations in the Multiplication Algorithm.  Here the product digits <m>c_i</m>
are the results of a <em>remainder</em> operation, so a mnemonic notation might use
<m>r</m>.  Similarly the <em>carry</em> values might use a 
mnemonic notation <m>c</m> but instead 
are called <m>r_i</m>.  So a caution to the reader to not be confused, it's too late 
to change notation now!
</p>
</remark>  
<lemma>
    <title>Multiplication Algorithm</title>
  <statement>
    <p>
      Let the base-<m>2n</m> digits of <m>A</m> be <m>a_{m}a_{m-1} \dots a_{1}a_{0}</m>.
      In other words, <m>0 \le a_i \lt 2n</m> and <m>A = \sum_{i=0}^m a_i (2n)^{i}</m>.
      Iteratively define the digits of <m> n \cdot A </m> as <m>c_i</m> with carries <m>r_i</m>
      as <m>r_0 = 0</m>, <m>c_i = \operatorname{rem}(n a_i + r_i, 2n)</m>, 
      and 
      <me>
          r_{i+1} = \left\lfloor \frac{n a_i + r_i}{2n} \right\rfloor
      </me>.
       Then 
       <ol>
       <li> <m>0 \le c_i \lt 2n</m>.</li>
       <li> <m>0 \le r_i \lt n</m> for each <m>i \ge 0</m>.</li>
       <li> <m> n \cdot A = \sum_{i=0}^{m+1} c_i (2n)^{i}</m>.</li>
    </ol>     
    </p>
  </statement>

  <proof>
    <p>
      <ol>
      <li> The first item is true by definition since <m>c_i</m> is a 
      remainder modulo <m>2n</m>. </li>
      <li> Prove the second item by induction on <m>i</m>.  The base case is
      true since <m>r_0=0</m> and then if <m>r_i \lt n</m>
      <me>
      0 \le r_{i+1} \le \left\lfloor \frac{n(2n-1) + (n-1)}{2n} \right\rfloor = n-1
      </me>,
      establishing the induction step.</li>
      <li>The third item is just a formal satement of the Multiplication Algorithm using the 
      notation in the satement of the lemma.  Refer to the Examples for specific instances.
      </li>
      </ol>
    </p>
  </proof>
</lemma>

<p>
The concept of this fourth solution is simple.  Multiply <m>n^{k-1} \cdot n</m> using 
the elementary school multiplication algorithm in base <m>2n</m>. If every digit of 
<m>n^{k-1}</m> is at least <m>2d</m>, then every carry is between <m>d</m> and <m>n-1</m>.
Refer to the second example for specifics.
In particular, every digit is at least <m>d</m>.  
</p>
<p>
The base case for the induction is <m>k=1</m> is true if <m>N = d</m>. 
That is, for an odd integer <m>n > N</m>
the base-<m>2n</m> representation of <m>n</m> which will be the 
single <q>digit</q> <m>n</m> which then satisifies <m>n \gt N = d</m>.
</p>

<p>
Apply the lemma to <m>n^{k-1}</m> with digits <m>a_{m}a_{m-1}\dots a_{1}a_{0}</m>.
Sppose that <m>a_i \ge 2(d+1)</m> for all <m>i</m>.  Multiplying 
<m>n^{k-1} \cdot n = n^{k}</m> with digits <m>c_i</m> and carries <m>r_i</m>.
Then <m>c_0 = n \gt d</m> since <m>a_0 = n \gt d</m>.  On the other hand, if
<m> i \ge 1 </m>, then 
<me>
   r_i = \left\lfloor \frac{n a_{i-1} + r_{i-1}}{2n} \right\rfloor \gt
        \left\lfloor \frac{n \cdot 2(d+1) + 0}{2n} \right\rfloor = d + 1
</me>
so all carries are at least <m>d+1</m>.  But <m>\operatorname{rem}(n \cdot a_{i}, 2n)</m>
is either <m>0</m> or <m>n</m>, so 
<me> 0 + (d+1) \le \operatorname{rem}(n \cdot a_{i}, 2n) \le n + (n-1) 
</me>
which means that <m>\operatorname{rem}(n \cdot a_{i}, 2n) + r_i</m> is between 
<m>d+1</m> and <m> 2n-1</m> so 
<me>
    c_i = \operatorname{rem}( \operatorname{rem}(n \cdot a_{i}, 2n) + r_{i}, 2n) \gt d 
</me>.
</p>
<p>
As an alternative argument, if the base-<m>2n</m> digits of <m>n^{k-1}</m> are 
<m>a_{m}a_{m-1}\dots a_{1}a_{0}</m> and the digits of
<m>n^{k-1} \cdot n = n^{k}</m> are <m>c_{k-1}c_{k-2}\dots c_{2}c_{1}c_{0}</m>, then
multiplying <m>n^{k}</m> by <m>2</m> gives the base-<m>2n</m> number
<m>a_{m}a_{m-1}\dots a_{1}a_{0}0</m>.  If one of th digits <m>c_i \le d</m>, then when 
multiplying it by <m>2</m>, the carry is at most <m>1</m>, so 
<m> a_{i} \le 2 c_i + 1 \le 2d + 1</m> which contradicts <m>a_{i} \ge 2(d+1)</m>. 
</p>
<p> Finally, again inductively if <m>n > (d+1)2^{k-1}</m> then all of the digits of
<m>n^k</m> are greater than <m>d+1</m>.
</p>
</section>



